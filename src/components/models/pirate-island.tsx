/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 captain_ship_island.glb --transform 
Files: captain_ship_island.glb [8.74MB] > C:\Users\mitul\Downloads\captain_ship_island-transformed.glb [1.03MB] (88%)
*/

import React, { useEffect } from "react";
import { useGraph } from "@react-three/fiber";
import { useGLTF, useAnimations } from "@react-three/drei";
import { SkeletonUtils } from "three-stdlib";
import PirateIsland from "@/assets/captain_ship_island-transformed.glb";
import { Mesh, SkinnedMesh } from "three";

export default function Model(props: any) {
  // const dir = useRef<DirectionalLight>(null!);
  // useHelper(dir, DirectionalLightHelper, 1, "red");
  // const meshRef = useRef(null!);
  // const [position, setPosition] = useState([0, 0, 0]);
  // const [rotation, setRotation] = useState([0, 0, 0]);

  // Update the position and rotation every frame
  // useFrame(() => {
  //   if (meshRef.current) {
  //     const pos = meshRef.current.position;
  //     const rot = meshRef.current.rotation;
  //     console.log("position: ", pos);
  //     // setPosition([pos.x, pos.y, pos.z]);
  //     // setRotation([rot.x, rot.y, rot.z]);
  //   }
  // });

  const group = React.useRef();
  const { scene, animations } = useGLTF(PirateIsland);
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes, materials } = useGraph(clone);
  const { actions } = useAnimations(animations, group);
  useEffect(() => {
    if (actions) {
      const animationAction = actions["Wave"]; // Replace with the actual animation name
      if (animationAction) {
        // animationAction.play();
      }
    }
  }, [actions]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group
          name="CharacterArmature"
          position={[21.745, 12.545, 105.041]}
          scale={3.733}
        >
          <primitive object={nodes.Root} />
        </group>
        <mesh
          name="Ship_Large"
          geometry={(nodes.Ship_Large as Mesh).geometry}
          material={materials.Atlas}
          position={[2.278, 2.838, 98.04]}
          rotation={[0, -0.395, 0]}
          scale={4.983}
        />
        <mesh
          name="barrel_plank009_Building_0"
          geometry={(nodes.barrel_plank009_Building_0 as Mesh).geometry}
          material={materials.Building}
          position={[-14.263, 5.015, -18.203]}
          rotation={[2.092, -0.618, 2.351]}
          scale={0.524}
        />
        <mesh
          name="Box754_environment_0"
          geometry={(nodes.Box754_environment_0 as Mesh).geometry}
          material={materials.environment}
          position={[-47.034, 1.344, 21.926]}
          rotation={[-1.518, -0.083, 1.222]}
        />
        <mesh
          name="Object022_Material_#61_0"
          geometry={(nodes["Object022_Material_#61_0"] as Mesh).geometry}
          material={materials.Material_61}
          position={[-10.326, 0.4, -0.836]}
          rotation={[-Math.PI / 2, 0, 0]}
        />
        <mesh
          name="Sea_sea_0"
          geometry={(nodes.Sea_sea_0 as Mesh).geometry}
          material={materials.material_3}
          position={[0, 0.264, 0.206]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={0.055}
        />
        <mesh
          name="Sky_sky_0"
          geometry={(nodes.Sky_sky_0 as Mesh).geometry}
          material={materials.material}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={0.055}
        />
        <skinnedMesh
          name="Captain_Barbarossa_"
          geometry={(nodes.Captain_Barbarossa_ as Mesh).geometry}
          material={materials["Atlas.001"]}
          skeleton={(nodes.Captain_Barbarossa_ as SkinnedMesh).skeleton}
          position={[21.745, 12.545, 105.041]}
          scale={3.733}
        />
        <skinnedMesh
          name="Ernest"
          geometry={(nodes.Ernest as Mesh).geometry}
          material={materials["Atlas.001"]}
          skeleton={(nodes.Ernest as SkinnedMesh).skeleton}
          position={[21.745, 12.545, 105.041]}
          scale={3.733}
        />
      </group>
    </group>
  );
}

// useGLTF.preload('/captain_ship_island-transformed.glb')
